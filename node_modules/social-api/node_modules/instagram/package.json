{
  "name": "instagram",
  "description": "Instagram API wrapper for node.",
  "version": "0.0.4",
  "homepage": "https://github.com/Swizec/nodestagram",
  "repository": {
    "type": "git",
    "url": "git://github.com/Swizec/nodestagram.git"
  },
  "author": {
    "name": "Swizec",
    "email": "swizec@swizec.com",
    "url": "http://swizec.com"
  },
  "main": "./index.js",
  "directories": {
    "lib": "."
  },
  "engines": {
    "node": "*"
  },
  "gitHead": "294b6915d0827ce33fc51813d7d376dedfacf6bf",
  "readme": "\n# Nodestagram\n\nThis project started because I wanted to use instagram's API in node.js and there were no libraries yet.\n\nSince everything is so fresh spanking new, forks/pull-requests much appreciated.\n\n# Usage\n\nThe library is intended to be used as a thin wrapper over the basic Instagram API, so the\nidea is to keep everything as similar to the original as possible.\n\nEvery method should be passed some parameters if needed and a callback function. The callback\nshould accept a result and an error argument.\n\nThe convention being that when the error is null, the result contains media as returnd from the API,\nand when something goes wrong error is the status code as returned by the API and the result is the\nmeta info the API returned.\n\nFor example:\n\n    var instagram = require('instagram').createClient('<client_id>', '<client_secret>');\n\n    // fetch media by id\n    instagram.media.id('<id>', function (images, error) { ... });\n\n    // fetch popular media\n    instagram.media.popular(function (images, error) { ... });\n\n    // search media\n    instagram.media.popular({lat: <some latitude>,\n    \t\t             lng: <some longitude>},\n\t\t\t    function (images, error) { ... });\n\n\n    // get info about a tag\n    instagram.tags.tag('snow', function (tag, error) { ... });\n\n    // get recent media for a tag\n    instagram.tags.media('snow', function (tag, error) { ... });\n    instagram.tags.media('snow', {max_id: 5}, function (tag, error) { ... });\n    instagram.tags.media('snow', {min_id: 5}, function (tag, error) { ... });\n    instagram.tags.media('snow', {max_id: 5, min_id: 0}, function (tag, error) { ... });\n\n    // search for a tag\n    instagram.tags.search('snow', function (tags, error) { ... });\n\n\n    // get info about a location\n    instagram.tags.tag(1, function (tag, error) { ... });\n\n    // get recent media for a location\n    instagram.tags.media(1, function (tag, error) { ... });\n    instagram.tags.media(1, {max_id: 5}, function (tag, error) { ... });\n    instagram.tags.media(1, {min_id: 5}, function (tag, error) { ... });\n    instagram.tags.media(1, {max_id: 5, min_id: 0}, function (tag, error) { ... });\n\n    // search for a location\n    instagram.tags.search({lat: ..., lng: ..., distance: ...}, function (tags, error) { ... });\n\n\n    // get info about a specific user\n    instagram.users.id(1234, function (user, error) { ... });\n    \n    // get recent media for a user\n    instagram.users.media(1234, {count: 12}, function (images, error, pagination) { ... });\n    \n    // getting own media, according to given *access_token* which is a required parameter\n    instagram.users.self({access_token: \"1337\", count: 12}, function (images, error, pagination) { ... });\n    \n    // search for usernames\n    instagram.users.search(\"Jack\", function (users, error) { ... });\n    instagram.users.search({q: \"John\", count: 1}, function (users, error) { ... });\n     \t\n\n# License\n\nSome sort of BSD or MIT license,  the general idea being:\n\n- this is open source\n- you must give credit where credit is due\n- not viral such as GPL\n- you still can't change the license though",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/Swizec/nodestagram/issues"
  },
  "_id": "instagram@0.0.4",
  "_shasum": "998618e8fdb0035704b807aacdc09317313da980",
  "_from": "git://github.com/Swizec/nodestagram.git#master",
  "_resolved": "git://github.com/Swizec/nodestagram.git#294b6915d0827ce33fc51813d7d376dedfacf6bf"
}
